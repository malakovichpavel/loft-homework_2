<?php
echo '<center>' . '<h2>' . "Домашнее задание №2" . '</h2>';

echo "<h3>" . "Задание #1" ."</h3>";
//1.Функция должна принимать массив строк и выводить каждую строку в отдельном параграфе (тег <p>)
/*2.Если в функцию передан второй параметр true,
то возвращать (через return) результат в виде одной объединенной строки.*/
//Задание 1, выполнено неверно: Функция должна быть одна, а не две, и она должна принимать в качестве аргумента массив.
//Сейчас же обе функции принимают свободное число строковых аргументов, вместо массива.

$text = array('Терпенье и труд все перетрут', 'Глаза страшатся, а руки делают', 'За все браться - ничего не сделать');

function concl($text)
{ if ($text[1]=TRUE) {  //вместо второй строки 1. не понял - как изменить
    for ($i = 0; $i <= 2; $i++) {
        echo $text[$i] . ' : ';
    }
}
    else for  ($i=0; $i<=2; $i++) {
    echo '<p>' .  $text[$i] . '<p>';
}
}
echo concl($text);

echo "<h3>" . "Задание #2" ."</h3>";
/*1.	Функция должна принимать 2 параметра:
a.	массив чисел;
b.	строку, обозначающую арифметическое действие,
которое нужно выполнить со всеми элементами массива.
2.	Функция должна вывести результат на экран.
3.	Функция должна обрабатывать любой ввод,
в том числе некорректный и выдавать сообщения об этом*/

/*Задание 2: опять-таки придуманы лишние сложности. В задании написано: Функция должна принимать 2 параметра:
массив чисел;
строку, обозначающую арифметическое действие,    которое нужно выполнить со всеми элементами массива.
Второй параметр подразумевает, что в него будет передано: + - * или /
И по заданию не должно быть несколько функций.*/
$asd = array(1,2,4,6); //задал массив
echo 'Задан массив:' . '<br>';
$arrlength = count($asd);
for($x = 0; $x < $arrlength; $x++) {
    echo $asd[$x] . ', '; //вывел массив
}

$str2 = '+ - * или /';
echo '<br>' . "Необходимо выполнить: + - * или /" . '<br>'; //вот тут условие задачи не понятно

function ex2($asd, $str2) {
    for  ($i=0; $i<func_num_args(); $i++) {
        func_get_arg($i) . "<br>";
    }
    echo "сумма чисел массива = " . array_sum($asd) . "<br>";
    $asd=TRUE;
    if ($asd){
        echo  "ввод массива корректный ";
    }
    else  echo  "ввод массива не корректный ";
}
echo ex2($asd, $str2);

echo "<h3>" . "Задание #3" ."</h3>";

/*1.	Функция должна принимать переменное число аргументов.
2.	Первым аргументом обязательно должна быть строка, обозначающая арифметическое действие,
которое необходимо выполнить со всеми передаваемыми аргументами.
3.	Остальные аргументы это целые и/или вещественные числа.


Задание 3: всё ровно тоже самое. Но тут ещё один нюанс: здесь массив вообще не должен был участвовать.
Тут именно переменное число аргументов.
 А внутри функции могло произойти и деление и вычитание, так что array_sum не подойдёт для использования

Пример вызова: calcEverything(‘+’, 1, 2, 3, 5.2);
Результат: 1 + 2 + 3 + 5.2 = 11.2*/


$str3 = '+ - * или /';
echo "Необходимо выполнить: + - * или /" . '<br>';

function calcEverything() {

        echo "Результат: " . func_get_arg(1). func_get_arg(0) . func_get_arg(2). func_get_arg(0).
            func_get_arg(3). func_get_arg(0).func_get_arg(4)."=". $a=func_get_arg(1)+func_get_arg(2)+func_get_arg(3)+
            func_get_arg(4)."<br>"; //громоздко, топорно, но по другому не придумал
}
echo calcEverything('+', 1, 2, 3, 5.2);

echo "<h3>" . "Задание #4" ."</h3>";

/*1.	Функция должна принимать два параметра – целые числа.
2.	Если в функцию передали 2 целых числа,
то функция должна отобразить таблицу умножения размером со значения параметров,
переданных в функцию. (Например если передано 8 и 8, то нарисовать от 1х1 до 8х8).
Таблица должна быть выполнена с использованием тега <table>
3.	 В остальных случаях выдавать корректную ошибку.*/
/*Задание 4: там проверка есть на равность строк столбцам,
но в задании такого ограничения не было.  То есть вполне можно создать таблицу умножения 2 на 5*/

function ex4($var1, $var2)
{
    echo "<table><tr>";
    for ($i = 1; $i <= $var1; $i++) {
        for ($j = 1; $j <= $var2; $j++)
            echo "<td>" . ($i * $j) . "</td>";
        if ($i != 10) echo "</tr><tr>";
    };
    echo "</tr></table>" . "<br>";
}
$var1=2;
$var2=5;
echo ex4($var1, $var2);

echo "<h3>" . "Задание #5" ."</h3>";

/*1.	Написать две функции.
2.	Функция №1 принимает 1 строковый параметр и возвращает true,
если строка является палиндромом*, false в противном случае. Пробелы и регистр не должны учитываться.
3.	Функция №2 выводит сообщение в котором на русском языке оговаривается результат из функции №1
Задание 5: Должно быть 2 функции, а у тебя только одна. К тому же она должна принимать просто строку,
а там работа с массивом опять идёт. Можно исходную строку и в масив разорвать,
но изначально в функцию должна приходить строка.*/

function ex5_1() {

    $string5 = "к и т н а м о р е р о м а н т и к";  //str_word_count - работает только с латиницей
    $arr5 = explode(" ", $string5);

    $my_array_rev = array_reverse($arr5);

    if ($arr5=$my_array_rev=TRUE) {
        echo "TRUE - Строка является палиндромом";
    function ex5_2(){
        echo "<br>" . "Если строку -кит на море романтик- прочитать наоборот, то получится -кит на море романтик-";
    }
        echo ex5_2();

    }
        else echo "FALSE - Строка не является палиндромом";

}
echo ex5_1();


echo "<h3>" . "Задание #6" ."</h3>";

/*1.	Выведите информацию о текущей дате в формате 31.12.2016 23:59
2.	Выведите unixtime время соответствующее 24.02.2016 00:00:00.*/

echo 'Текущее дата/время: '.date('d.m.Y H:i',time()).'<br>';

$date = '2016-02-24 00:00:00';
echo 'unixtime время: '.$timestamp = strtotime($date);
//date('d-m-Y H:i:s',$UnixTime)

echo "<h3>" . "Задание #7" ."</h3>";

/*1.	Дана строка: “Карл у Клары украл Кораллы”. удалить из этой строки все заглавные буквы “К”.
2.	Дана строка “Две бутылки лимонада”. Заменить “Две”, на “Три”. По желанию дополнить задание.
Задание 7: удалить заглавные буквы К - это значит не сделать их строчными а удалить из строки вовсе.
То есть слово Карл должно стать арл*/

$str7 = "Карл у Клары украл Кораллы";
$str7 = str_replace("Карл", "арл", $str7);
$str7 = str_replace("Клары", "лары", $str7);
$str7 = str_replace("Кораллы", "ораллы", $str7); //отдельную функцию не нашёл
echo $str7;

$rawstring = "Две бутылки лимонада.";
$str_1 = str_replace("Две", "Три", $rawstring);

echo "<br>". $str_1;

echo "<h3>" . "Задание #8" ."</h3>";
/*1.	Напишите функцию, которая с помощью регулярных выражений,
получит информацию о переданных RX пакетах из переданной строки:
2.	Пример строки: “RX packets:950381 errors:0 dropped:0 overruns:0 frame:0. “
3.	Если кол-во пакетов более 1000, то выдавать сообщение: “Сеть есть”
4.	Если в переданной в функцию строке есть “:)”, то нарисовать смайл в
 ASCII и не выдавать сообщение из пункта №3. Смайл должен храниться в отдельной функции
Задание 8: ошибка в строке: if (print_r($keywords[3])=":)")
{  print_r - это функция выведения информации на экран, её не надо сравнивать со строкой
И смайлик в этой строке может быть по заданию в любом месте,
так что нужно анализировать всю строку, а есть ли он там?*/

$str8 = "RX packets: 950381 errors:0 dropped:0 overruns:0 frame:0.";
echo $str8 . "<br>";//выводим строку
$keywords = preg_split("/[ s,]+/", $str8);//разбиваем на массив
/*$sml=' :) ';
for  ($i=0; $i<=6; $i++) {               //так и не понял - как смайлик подключить
    if ($keywords[$i] = $sml )
    {echo "                  Cb" . "<br>";
    echo "          db         `8b" . "<br>";
    echo "          VP           8b" . "<br>";
    echo "             C8888D    88D" . "<br>";
    echo "          db          8b" . "<br>";
    echo "          VP        .8P" . "<br>";
    echo "                  CP" . "<br>";}
}*/

 print_r($keywords[3]);
if ($keywords[3]>1000) {
    echo "<br>" . 'Сеть есть';}



echo "<h3> " . "Задание #9" ."</h3>";
/*1.	Создайте средствами ОС файл test.txt и поместите в него текст “Hello, world”
2.	Напишите функцию, которая будет принимать имя файла, открывать файл и выводить содержимое на экран.
Задание 9: файл надо было создать без участия ПХП а на ПХП просто читать его, для этого написать функцию*/

/*$myfile = fopen("test.txt", "w") or die("Unable to open file!");
$txt = "Hello, world\n";
fwrite($myfile, $txt);
fclose($myfile);*/

$myfile = fopen("test.txt", "r") or die("Unable to open file!");
echo fread($myfile,filesize("test.txt"));
fclose($myfile);

echo "<h3>" . "Задание #10" ."</h3>";
//1.	Создайте файл anothertest.txt средствами PHP. Поместите в него текст - “Hello again!”
$myfile10 = fopen("test10.txt", "w") or die("Unable to open file!");
$txt10 = "Hello again!\n";
fwrite($myfile10, $txt10);
fclose($myfile10);

$myfile10 = fopen("test10.txt", "r") or die("Unable to open file!");
echo fread($myfile10,filesize("test10.txt"));
fclose($myfile10);

echo '</center>';

 ?>